<UserControl x:Class="WpfApp1.BoolPick.BoolPickConverterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1.BoolPick"
             xmlns:common="clr-namespace:WpfApp1.Common"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:BoolPickConverter  x:Key="BoolPickConverter"/>
        <common:SafeDoubleConverter  x:Key="SafeDoubleConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel>
            <TextBox >
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource BoolPickConverter}"
                   Mode="TwoWay"
                   UpdateSourceTrigger="PropertyChanged">
                        <!-- 순서 중요: 컨버터 설명과 동일 -->
                        <Binding Path="BoolTest"/>
                        <!-- Bool은 읽기만 -->
                        <Binding Path="Test[0].B"/>
                        <Binding Path="Test[1].B"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
            <CheckBox IsChecked="{Binding BoolTest}"></CheckBox>
            <TextBlock Text="{Binding Test[0].B}">

            </TextBlock>
            <TextBlock Text="{Binding Test[1].B}">

            </TextBlock>
            <TextBox Text="{Binding Test[0].B,Mode=TwoWay
                ,UpdateSourceTrigger=PropertyChanged ,Converter={StaticResource SafeDoubleConverter}}"/>
            <Button Height="100" >
                <Button.Command>
                    <MultiBinding Converter="{StaticResource BoolPickConverter}"
                   Mode="TwoWay"
                   UpdateSourceTrigger="PropertyChanged">
                        <!-- 순서 중요: 컨버터 설명과 동일 -->
                        <Binding Path="BoolTest"/>
                        <!-- Bool은 읽기만 -->
                        <Binding Path="ButtonCommand"/>
                        <Binding Path="Button2Command"/>
                    </MultiBinding>
                </Button.Command>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="1">
            <DataGrid x:Name="Log"  IsEnabled="True"  Background="LightGray"   
       FontSize="14.5"   Grid.Row="2" IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False"
       HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <DataGrid.ItemsSource>
                    <MultiBinding Converter="{StaticResource BoolPickConverter}"
     Mode="TwoWay"
     UpdateSourceTrigger="PropertyChanged">
                        <!-- 순서 중요: 컨버터 설명과 동일 -->
                        <Binding Path="BoolTest"/>
                        <!-- Bool은 읽기만 -->
                        <Binding Path="Test"/>
                        <Binding Path="Test2"/>
                    </MultiBinding>
                </DataGrid.ItemsSource>
                <DataGrid.Columns>
                    <DataGridTextColumn  Foreground="Black"   Header="Data Log" MinWidth="30" Width="0.5*" Binding="{Binding Path=A }">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" >
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="Ip"  Header="IP" MinWidth="180" Width="1*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" >
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox   common:Numeric.IsEnabled="True"
    common:Numeric.AllowDecimal="True"
    common:Numeric.AllowNegative="True"
    common:Numeric.MaxDecimalPlaces="2"
                                    HorizontalAlignment="Center"  Foreground="Black"  Text="{Binding Path=B, Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SafeDoubleConverter}}">
                                
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</UserControl>
